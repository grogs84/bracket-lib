{
  "version": 3,
  "sources": ["../../@mgi/bracket-react/dist/index.js"],
  "sourcesContent": ["// src/svg/BracketSVG.tsx\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction BracketSVG(props) {\n  const {\n    layout,\n    width,\n    height,\n    boxWidth = 120,\n    boxHeight = 40,\n    padding = 20,\n    stroke = \"#888\",\n    fill = \"#fff\",\n    textColor = \"#222\"\n  } = props;\n  const maxX = Math.max(0, ...layout.nodes.map((n) => n.x));\n  const maxY = Math.max(0, ...layout.nodes.map((n) => n.y));\n  const w = width ?? maxX + boxWidth + padding * 2;\n  const h = height ?? maxY + boxHeight + padding * 2;\n  const nodeMap = new Map(layout.nodes.map((n) => [n.id, n]));\n  const boxX = (x) => padding + x;\n  const boxY = (y) => padding + y;\n  const midY = (y) => boxY(y) + boxHeight / 2;\n  const rightX = (x) => boxX(x) + boxWidth;\n  const leftX = (x) => boxX(x);\n  return /* @__PURE__ */ jsxs(\"svg\", { width: w, height: h, viewBox: `0 0 ${w} ${h}`, role: \"img\", children: [\n    /* @__PURE__ */ jsx(\"g\", { stroke, fill: \"none\", strokeWidth: 2, children: layout.edges.map((e) => {\n      const from = nodeMap.get(e.from);\n      const to = nodeMap.get(e.to);\n      const x1 = rightX(from.x);\n      const y1 = midY(from.y);\n      const x4 = leftX(to.x);\n      const y4 = midY(to.y);\n      const mid = (x1 + x4) / 2;\n      const d = `M ${x1},${y1} H ${mid} V ${y4} H ${x4}`;\n      return /* @__PURE__ */ jsx(\"path\", { d }, `${e.from}->${e.to}`);\n    }) }),\n    /* @__PURE__ */ jsx(\"g\", { children: layout.nodes.map((n) => /* @__PURE__ */ jsxs(\"g\", { transform: `translate(${boxX(n.x)}, ${boxY(n.y)})`, children: [\n      /* @__PURE__ */ jsx(\"rect\", { width: boxWidth, height: boxHeight, rx: 6, ry: 6, fill, stroke }),\n      /* @__PURE__ */ jsx(\n        \"text\",\n        {\n          x: boxWidth / 2,\n          y: boxHeight / 2,\n          dominantBaseline: \"middle\",\n          textAnchor: \"middle\",\n          fill: textColor,\n          fontFamily: \"system-ui, sans-serif\",\n          fontSize: 12,\n          children: n.id\n        }\n      )\n    ] }, n.id)) })\n  ] });\n}\nexport {\n  BracketSVG\n};\n"],
  "mappings": ";;;;;;;;;AACA,yBAA0B;AAC1B,SAAS,WAAW,OAAO;AACzB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,EACd,IAAI;AACJ,QAAM,OAAO,KAAK,IAAI,GAAG,GAAG,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACxD,QAAM,OAAO,KAAK,IAAI,GAAG,GAAG,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACxD,QAAM,IAAI,SAAS,OAAO,WAAW,UAAU;AAC/C,QAAM,IAAI,UAAU,OAAO,YAAY,UAAU;AACjD,QAAM,UAAU,IAAI,IAAI,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1D,QAAM,OAAO,CAAC,MAAM,UAAU;AAC9B,QAAM,OAAO,CAAC,MAAM,UAAU;AAC9B,QAAM,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY;AAC1C,QAAM,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI;AAChC,QAAM,QAAQ,CAAC,MAAM,KAAK,CAAC;AAC3B,aAAuB,yBAAK,OAAO,EAAE,OAAO,GAAG,QAAQ,GAAG,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,OAAO,UAAU;AAAA,QACzF,wBAAI,KAAK,EAAE,QAAQ,MAAM,QAAQ,aAAa,GAAG,UAAU,OAAO,MAAM,IAAI,CAAC,MAAM;AACjG,YAAM,OAAO,QAAQ,IAAI,EAAE,IAAI;AAC/B,YAAM,KAAK,QAAQ,IAAI,EAAE,EAAE;AAC3B,YAAM,KAAK,OAAO,KAAK,CAAC;AACxB,YAAM,KAAK,KAAK,KAAK,CAAC;AACtB,YAAM,KAAK,MAAM,GAAG,CAAC;AACrB,YAAM,KAAK,KAAK,GAAG,CAAC;AACpB,YAAM,OAAO,KAAK,MAAM;AACxB,YAAM,IAAI,KAAK,EAAE,IAAI,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE;AAChD,iBAAuB,wBAAI,QAAQ,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,KAAK,EAAE,EAAE,EAAE;AAAA,IAChE,CAAC,EAAE,CAAC;AAAA,QACY,wBAAI,KAAK,EAAE,UAAU,OAAO,MAAM,IAAI,CAAC,UAAsB,yBAAK,KAAK,EAAE,WAAW,aAAa,KAAK,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,KAAK,UAAU;AAAA,UACrI,wBAAI,QAAQ,EAAE,OAAO,UAAU,QAAQ,WAAW,IAAI,GAAG,IAAI,GAAG,MAAM,OAAO,CAAC;AAAA,UAC9E;AAAA,QACd;AAAA,QACA;AAAA,UACE,GAAG,WAAW;AAAA,UACd,GAAG,YAAY;AAAA,UACf,kBAAkB;AAAA,UAClB,YAAY;AAAA,UACZ,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,UAAU,EAAE;AAAA,QACd;AAAA,MACF;AAAA,IACF,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC;AAAA,EACf,EAAE,CAAC;AACL;",
  "names": []
}
